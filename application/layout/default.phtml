<?php require __APP_PATH . DS . 'layout' . DS . 'warnfight' . DS . '_header.php'; ?>
    <div id="hero-container" class="container <?php echo $request->getController(); ?>">
        <div class="row">
            <div class="col-sm-12">
                <?php echo (isset($contenu)) ? $contenu : 'Variable $contenu not exist'; ?>
            </div>
        </div>
<?php
if (__DEV_MODE) {
    echo '<div class="row"><div class="col-sm-12">';
    $request = Request::getInstance();
    $model = new cwModel();
    $isMobile = is_mobile();
    $html = new Html();

    $memori = function ($size) {
        $unit=array('b','kb','mb','gb','tb','pb');
        return @round($size/pow(1024,($i=floor(log($size,1024)))),2).' '.$unit[$i];
    };
    $rqt = (isset($_SERVER['REQUEST_TIME_FLOAT'])) ? $_SERVER['REQUEST_TIME_FLOAT'] : $_SERVER['REQUEST_TIME'];

    $html->comment('Script tools')
        ->script(array('type' => 'application/javascript'),
            'jQuery(document).on("click", \'#getModelQuery\', function(){' .
            'bootbox.alert(jQuery(\'#queryInfo\').html());' .
            '});' .
            'jQuery(document).on("click", \'#getLogs\', function(){' .
            'bootbox.alert(jQuery(\'#logsInfo\').html());' .
            '});')->end()
        ->comment('End of script tools');


//<span class="label label-important"><i class="icon-signal"></i></span>
    $html->comment('Text tools')
        ->div(array('class' => 'row margin-bottom-10 margin-top-10'))
        ->div(array('style' => 'text-align:center'))

        ->span(array('class' => 'badge label-primary'))
            ->i(array('class' => 'fa fa-cogs', 'title' => 'Developement tools:'))->end()
            ->span(array('id' => 'getLogs'), ' Logs: ('.count(Log::getLog()).')')->end()
        ->end()->span(' ')->end()


        ->span(array('class' => 'badge label-primary'))
            ->i(array('class' => 'fa fa-info-circle'))->end()
            ->span(array('id' => 'getModelQuery'), ' Requ&ecirc;te: ' . $model->getNbQuery() . ' ('.$memori($model::getMemoryUsage()).')')->end()
        ->end()->span(' ')->end()

        ->span(array('class' => 'badge label-primary'))
            ->i(array('class' => 'fa fa-fighter-jet'))->end()
            ->span(' G&eacute;n&eacute;ration en ' .	round(__START_MICROTIME+microtime(true), 3) . ' sec')->end()
        ->end()

        ->br()

        ->span(array('class' => 'badge label-info'))
        ->i(array('class' => 'fa fa-retweet'))->end()
        ->span(array('title' => 'Poids du code source g&eacute;n&eacute;r&eacute; (pas celle de la page elle-m&ecirc;me)'),' Poids: ' .  _format_bytes(strlen(ob_get_contents())))->end()
        ->end()->span(' ')->end()

        ->span(array('class' => 'badge label-info'))
            ->i(array('class' => 'fa fa-retweet'))->end()
            ->span(' M&eacute;moire: ' . $memori(memory_get_usage()))->end()
        ->end()->span(' ')->end()

        ->span(array('class' => 'badge label-info'))
            ->i(array('class' => 'fa fa-code'))->end()
            ->span(' ' . exec("find ../ -type f -name '*.php' -exec wc -l {} \; | awk '{sum+=$1}END{print sum}'") . ' lignes de code PHP')->end()
        ->end()
        ->span(' ')->end();

        $class = ( (time()-$rqt) > 1) ? 'label-danger' : 'label-info';
        $html->span(array('class' => 'badge ' . $class))
                ->i(array('class' => 'fa fa-upload'))->end()
                ->span(' Envois de la page au client: ' . number_format(time()-$rqt, 5))->end()
            ->end();

    $html->end()
        ->end()
        ->comment('End of text tools');

    $html->comment('Query info')
        ->div(array('id' => 'queryInfo', 'style' => 'display: none'))
        ->strong('Tyde d\'affichage: ')->end()
        ->span($isMobile['statut'])->end()
        ->br()
        ->strong('Controller: ')->end()
        ->span($request->getController() . '.' . $request->getAction())->end()
        ->br();

    $rules = NULL;
    if ($request->params) {
        $html->strong('Params: ')->end();
        foreach($request->params as $key => $value) {
            if (!is_numeric($key)) {
                $html->strong($key . ':')->end()
                    ->span('&nbsp;' . $value . '&nbsp;&nbsp;')->end();
            }
        }
        $html->br();
    }

    $html->table(array('class' => 'zebra-striped bordered-table condensed-table'));
    $classIk = true;
    foreach ($model->getLog() as $key => $value) {
        $html->tr();
        if ($value['type'] != 'INFO' OR preg_match('# \*#', $value['type'])) {
            $html->td(array('class' => 'grd-orangered color-white ' . strtolower($value['type']), 'style' => 'text-shadow: black 0.1em 0.1em 0.2em'), $value['type'] . '::' . $value['message'])->end();
        } else {
            $html->td($value['message'])->end();
        }
        $html->end();
    }
    $html->end();
    $html->end()
        ->comment('End of query info');

    $html->comment('Logs list')
        ->div(array('id' => 'logsInfo', 'style' => 'display: none'))
        ->div(Log::console())->end()
        ->end()
        ->comment('End of logs list');
    echo $html;
    echo '</div></div>';
}
?>
    </div>

<?php require __APP_PATH . DS . 'layout' . DS . 'warnfight' . DS . '_footer.php'; ?>